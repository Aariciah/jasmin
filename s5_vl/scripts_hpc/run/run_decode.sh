#!/bin/bash
# Copyright 2020 Siyuan Feng (Delft University of Technology)
# Based on a Dutch ASR system trained using CGN training material,
# Do decoding and scoring on JASMIN data
# JASMIN contains Dutch spoken by native children, non-native children, non-native adults and the native elderly
# JASMIN has two speech types, read speech (comp-q) and human-machine interaction (comp-p)
# JASMIN has NL Dutch and VL Dutch
# In jasmin/s5/ we focus on NL Dutch in Jasmin; go to jasmin/s5_vl/ for VL Dutch in Jasmin
stage=0
stop_stage=1
lang="vl" # 
local_dir=data/local/data
. utils/parse_options.sh
. ./cmd.sh
. ./path.sh


if [ $stage -le 0 ] && [ $stop_stage -gt 0 ]; then
  echo "$0: constructing data directories for read speech "
  # first a data/dir containing all ${lang} speech
  mkdir -p data/test_read_all || exit 1;
  cp $local_dir/test_${lang}_wav_comp_q.scp data/test_read_all/wav.scp
  cp $local_dir/segments_comp_q_${lang} data/test_read_all/segments
  cp $local_dir/utt2spk_comp_q_${lang} data/test_read_all/utt2spk
  cp $local_dir/spk2gender_${lang} data/test_read_all/spk2gender
  sed -i -e 's/M$/m/g' -e 's/F$/f/g' data/test_read_all/spk2gender
#  cp $local_dir/spk2age_${lang} data/test_read_all/spk2age
#  cp $local_dir/spk2group_${lang} data/test_read_all/spk2group
#  cp $local_dir/spk2dialectregion_${lang} data/test_read_all/spk2dialectregion
  cp $local_dir/text_comp_q_${lang} data/test_read_all/text
  utils/utt2spk_to_spk2utt.pl data/test_read_all/utt2spk > data/test_read_all/spk2utt
  utils/fix_data_dir.sh data/test_read_all
  utils/validate_data_dir.sh --no-feats data/test_read_all || exit 1
  # 
fi

if [ $stage -le 1 ] && [ $stop_stage -gt 1 ]; then
  echo "$0: constructing data directories for human-machine interatction speech "
  # first a data/dir containing all ${lang} speech
  mkdir -p data/test_hmi_all || exit 1;
  cp $local_dir/test_${lang}_wav_comp_p.scp data/test_hmi_all/wav.scp
  cp $local_dir/segments_comp_p_${lang} data/test_hmi_all/segments
  cp $local_dir/utt2spk_comp_p_${lang} data/test_hmi_all/utt2spk
  cp $local_dir/spk2gender_${lang} data/test_hmi_all/spk2gender
  sed -i -e 's/M$/m/g' -e 's/F$/f/g' data/test_hmi_all/spk2gender
#  cp $local_dir/spk2age_${lang} data/test_hmi_all/spk2age
#  cp $local_dir/spk2group_${lang} data/test_hmi_all/spk2group
#  cp $local_dir/spk2dialectregion_${lang} data/test_hmi_all/spk2dialectregion
  cp $local_dir/text_comp_p_${lang} data/test_hmi_all/text
  utils/utt2spk_to_spk2utt.pl data/test_hmi_all/utt2spk > data/test_hmi_all/spk2utt
  utils/fix_data_dir.sh data/test_hmi_all
  utils/validate_data_dir.sh --no-feats data/test_hmi_all || exit 1
  # 
fi



if [ $stage -le 2 ] && [ $stop_stage -gt 2 ]; then
  echo "create gender-specific direncotries based on $local_dir/spklist_{male,female}_${lang}"
  # requires $local_dir/spk2gender_${lang}, which is generated by local/jasmin_data_prep.sh
  if [ ! -f $local_dir/spklist_female_${lang} ]; then
    python3 local/jasmin_select_speakers.py $local_dir/spk2gender_${lang} f $local_dir/spklist_female_${lang}.txt
    cut -d ' ' -f 1 $local_dir/spklist_female_${lang}.txt > $local_dir/spklist_female_${lang} 
  fi
  if [ ! -f $local_dir/spklist_male_${lang} ]; then
    python3 local/jasmin_select_speakers.py $local_dir/spk2gender_${lang} m $local_dir/spklist_male_${lang}.txt
    cut -d ' ' -f 1 $local_dir/spklist_male_${lang}.txt  > $local_dir/spklist_male_${lang}
  fi
  utils/subset_data_dir.sh --spk-list $local_dir/spklist_female_${lang} data/test_read_all data/test_read_female
  utils/subset_data_dir.sh --spk-list $local_dir/spklist_male_${lang}  data/test_read_all data/test_read_male
fi

if [ $stage -le 3 ] && [ $stop_stage -gt 3 ]; then
  echo "create group-specific direncotries based on $local_dir/spklist_group{1,2,3,4,5}_${lang}"
  # requires $local_dir/spk2group_${lang}, which is generated by local/jasmin_data_prep.sh
  for group_id in 1 2 3 4 5; do
    if [ ! -f $local_dir/spklist_group${group_id}_${lang} ]; then
      python3 local/jasmin_select_speakers.py $local_dir/spk2group_${lang} $group_id $local_dir/spklist_group${group_id}_${lang}.txt
      cut -d ' ' -f 1 $local_dir/spklist_group${group_id}_${lang}.txt > $local_dir/spklist_group${group_id}_${lang}
    fi
    utils/subset_data_dir.sh --spk-list $local_dir/spklist_group${group_id}_${lang}  data/test_read_all data/test_read_group${group_id}
  done

fi


if [ $stage -le 4 ] && [ $stop_stage -gt 4 ]; then
  echo "For HMI Speech, create gender-specific direncotries based on $local_dir/spklist_{male,female}_${lang}"
  if [ ! -f $local_dir/spklist_female_${lang} ]; then
    python3 local/jasmin_select_speakers.py $local_dir/spk2gender_${lang} f $local_dir/spklist_female_${lang}.txt
    cut -d ' ' -f 1 $local_dir/spklist_female_${lang}.txt > $local_dir/spklist_female_${lang} 
  fi
  if [ ! -f $local_dir/spklist_male_${lang} ]; then
    python3 local/jasmin_select_speakers.py $local_dir/spk2gender_${lang} m $local_dir/spklist_male_${lang}.txt
    cut -d ' ' -f 1 $local_dir/spklist_male_${lang}.txt  > $local_dir/spklist_male_${lang}
  fi
  utils/subset_data_dir.sh --spk-list $local_dir/spklist_female_${lang} data/test_hmi_all data/test_hmi_female
  utils/subset_data_dir.sh --spk-list $local_dir/spklist_male_${lang}  data/test_hmi_all data/test_hmi_male
fi

if [ $stage -le 5 ] && [ $stop_stage -gt 5 ]; then
  echo "For HMI speech, create group-specific direncotries based on $local_dir/spklist_group{1,2,3,4,5}_${lang}"
  # requires $local_dir/spk2group_${lang}, which is generated by local/jasmin_data_prep.sh
  for group_id in 1 2 3 4 5; do
    if [ ! -f $local_dir/spklist_group${group_id}_${lang} ]; then
      python3 local/jasmin_select_speakers.py $local_dir/spk2group_${lang} $group_id $local_dir/spklist_group${group_id}_${lang}.txt
      cut -d ' ' -f 1 $local_dir/spklist_group${group_id}_${lang}.txt > $local_dir/spklist_group${group_id}_${lang}
    fi
    utils/subset_data_dir.sh --spk-list $local_dir/spklist_group${group_id}_${lang}  data/test_hmi_all data/test_hmi_group${group_id}
  done

fi
